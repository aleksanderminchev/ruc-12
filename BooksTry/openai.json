{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "User API",
    "description": "API for managing user data"
  },
  "basePath": "/api",
  "tags": [
    {
      "name": "User",
      "description": "Operations related to user management"
    }
  ],
  "paths": {
    "/UserController": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a new user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/UserController/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        }
      }
    }
  }
}
